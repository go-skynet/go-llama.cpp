name: CI
on: [pull_request]

jobs:
  ubuntu-latest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.x', 'stable']
    steps:
      - name: Clone
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with: 
          submodules: true
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Test
        run: |
          make test

  macOS-latest:
    runs-on: macOS-latest
    strategy:
      matrix:
        go-version: ['1.21.x', 'stable']
    steps:
      - name: Clone
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with: 
          submodules: true
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Test
        run: |
          CMAKE_ARGS="-DLLAMA_METAL=OFF -DLLAMA_F16C=OFF -DLLAMA_AVX512=OFF -DLLAMA_AVX2=OFF -DLLAMA_FMA=OFF" make test

  macOS-metal-latest:
    runs-on: macOS-latest
    strategy:
      matrix:
        go-version: ['1.21.x', 'stable']
    steps:
      - name: Clone
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with: 
          submodules: true
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Test
        run: |
          CMAKE_ARGS="-DLLAMA_F16C=OFF -DLLAMA_AVX512=OFF -DLLAMA_AVX2=OFF -DLLAMA_FMA=OFF" make BUILD_TYPE=metal test
          CGO_LDFLAGS="-framework Foundation -framework Metal -framework MetalKit -framework MetalPerformanceShaders" LIBRARY_PATH=$PWD C_INCLUDE_PATH=$PWD go build -o testbuild ./examples